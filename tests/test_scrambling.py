import logging
import unittest

import numpy as np
import sksdr

_log = logging.getLogger(__name__)

class TestScrambling(unittest.TestCase):
    poly = [1, 0, 1, 1, 0, 1, 0 ,1]
    ic = [0, 3, 2, 2, 5, 1, 7]
    def test_scramble(self):
        scrambler = sksdr.Scrambler(self.poly, self.ic)
        in_bits = np.array(
            [208, 231, 32, 233, 161, 24, 71, 140, 245, 247, 40, 248, 245, 124, 204, 36, 107, 234, 202, 245, 167, 9, 217, 239, 173, 193, 190, 100, 167, 43, 180, 8, 70, 11, 24, 210, 177, 81, 243, 8, 112, 97, 195, 203, 47, 125, 114, 165, 181, 193, 70, 174, 167, 41, 30, 127, 245, 87, 149, 57, 192, 65, 129, 178, 228, 245, 140, 35, 38, 65, 215, 65, 208, 62, 237, 89, 50, 64, 157, 121, 90, 212, 149, 140, 234, 73, 193, 192, 97, 145, 19, 13, 135, 199, 239, 33, 145, 120, 3, 86],
            dtype=np.uint8)
        expected_bits = np.array(
            [225, 237, 8, 188, 152, 192, 136, 205, 230, 236, 87, 234, 197, 43, 52, 81, 160, 139, 208, 25, 126, 198, 76, 163, 99, 254, 163, 143, 177, 12, 149, 203, 116, 191, 242, 75, 57, 151, 1, 62, 18, 203, 245, 226, 196, 103, 33, 215, 234, 114, 80, 239, 167, 115, 253, 211, 198, 30, 144, 193, 180, 85, 231, 17, 255, 49, 178, 238, 111, 199, 118, 40, 44, 253, 246, 103, 20, 63, 61, 238, 58, 9, 99, 32, 131, 67, 91, 35, 40, 245, 193, 8, 163, 19, 178, 192, 83, 78, 49, 76],
            dtype=np.uint8)
        out_bits = np.empty_like(in_bits)
        scrambler(in_bits, out_bits)
        assert np.all(out_bits == expected_bits)

    def test_descramble(self):
        descrambler = sksdr.Descrambler(self.poly, self.ic)
        in_bits = np.array(
            [225, 237, 8, 188, 152, 192, 136, 205, 230, 236, 87, 234, 197, 43, 52, 81, 160, 139, 208, 25, 126, 198, 76, 163, 99, 254, 163, 143, 177, 12, 149, 203, 116, 191, 242, 75, 57, 151, 1, 62, 18, 203, 245, 226, 196, 103, 33, 215, 234, 114, 80, 239, 167, 115, 253, 211, 198, 30, 144, 193, 180, 85, 231, 17, 255, 49, 178, 238, 111, 199, 118, 40, 44, 253, 246, 103, 20, 63, 61, 238, 58, 9, 99, 32, 131, 67, 91, 35, 40, 245, 193, 8, 163, 19, 178, 192, 83, 78, 49, 76],
            dtype=np.uint8)
        expected_bits = np.array(
            [208, 231, 32, 233, 161, 24, 71, 140, 245, 247, 40, 248, 245, 124, 204, 36, 107, 234, 202, 245, 167, 9, 217, 239, 173, 193, 190, 100, 167, 43, 180, 8, 70, 11, 24, 210, 177, 81, 243, 8, 112, 97, 195, 203, 47, 125, 114, 165, 181, 193, 70, 174, 167, 41, 30, 127, 245, 87, 149, 57, 192, 65, 129, 178, 228, 245, 140, 35, 38, 65, 215, 65, 208, 62, 237, 89, 50, 64, 157, 121, 90, 212, 149, 140, 234, 73, 193, 192, 97, 145, 19, 13, 135, 199, 239, 33, 145, 120, 3, 86],
            dtype=np.uint8)
        out_bits = np.empty_like(in_bits)
        descrambler(in_bits, out_bits)
        assert np.all(out_bits == expected_bits)
