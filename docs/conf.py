#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# scikit-sdr documentation build configuration file, created by
# sphinx-quickstart on Thu Jun 11 14:43:41 2020.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

from sksdr import __version__

sys.path.insert(0, os.path.abspath('../'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = '3.1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.autosummary',
    'sphinx.ext.doctest',
    'sphinx.ext.mathjax',
    'sphinx.ext.intersphinx', # link to other project's documentation (see mapping below)
    'sphinx.ext.viewcode',
    'sphinxcontrib.bibtex',
    'sphinx_autodoc_typehints', # automatically document param types (less noise in class signature)
    'jupyter_sphinx']

intersphinx_mapping = {
    "python": ("https://docs.python.org/3/", None),
    "NumPy [stable]": ('https://numpy.org/doc/stable/', None),
    "SciPy [latest]": ('https://docs.scipy.org/doc/scipy/reference', None),
    "matplotlib [latest]": ('https://matplotlib.org', None)
}

autosummary_generate = True
autodoc_member_order = 'bysource'
autodoc_default_flags = ['members', 'show-inheritance']
autodoc_inherit_docstrings = True # If no class summary, inherit base class summary
autoclass_content = "both" # Add __init__ doc (ie. params) to class summaries

bibtex_bibfiles = ["refs.bib"]

add_module_names = False
html_show_sourcelink = False # Remove 'view source code' from top of page (for html, not python)

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'scikit-sdr'
copyright = '2020, David Pi'
author = 'David Pi'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = __version__
# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
# language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
# exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
# pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
# todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# on_rtd is whether on readthedocs.org, this line of code grabbed from docs.readthedocs.org...
on_rtd = os.environ.get("READTHEDOCS", None) == "True"
if not on_rtd:  # only import and set the theme if we're building docs locally
    import sphinx_rtd_theme
    html_theme = "sphinx_rtd_theme"
    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
